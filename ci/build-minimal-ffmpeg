#!/bin/bash -eu

# shellcheck disable=SC2155,SC2046

set -o pipefail

readonly FFMPEG_VERSION=${1:?}
readonly BUILD_DIR=${2:-$HOME/.cache/ci/r128gain/ffmpeg}
readonly INSTALL_DIR=${3:-$HOME/.local}
readonly PROC_COUNT=$(grep -c '^processor' /proc/cpuinfo)


parse_audio_decoders() {
  # The lines between /* audio codecs */ and /* subtitles */ are audio
  # codecs. Parse them out and filter out only decoders.

  # shellcheck disable=SC2016
  sed -n '/^\/\* audio codecs \*\/$/,${p;/^\/\* subtitles \*\/$/q}' \
      libavcodec/allcodecs.c | \
    sed -n 's/extern .*Codec ff_\(.*\)_decoder;/\1/p'
}

configure() {
  ./configure --prefix="${INSTALL_DIR}" \
              --enable-gpl \
              --enable-version3 \
              --enable-static \
              --disable-shared \
              --disable-runtime-cpudetect \
              $(./configure --help | grep -oF -- '--disable-autodetect' || true) \
              --disable-programs \
              --enable-ffmpeg \
              --disable-doc \
              --disable-encoders \
              --enable-encoder=pcm_s16le \
              --disable-decoders \
              $(parse_audio_decoders | xargs -I'{}' echo --enable-decoder={}) \
              --disable-hwaccels \
              --disable-muxers \
              --enable-muxer=null \
              --disable-parsers \
              --disable-bsfs \
              --disable-protocols \
              --enable-protocol=file \
              --disable-devices \
              --disable-filters \
              --enable-filter=afifo \
              --enable-filter=aformat \
              --enable-filter=anullsink \
              --enable-filter=aresample \
              --enable-filter=asplit \
              --enable-filter=concat \
              --enable-filter=ebur128 \
              --enable-filter=replaygain \
              --disable-debug
}

repo_dir=$BUILD_DIR/$FFMPEG_VERSION
if [ "$FFMPEG_VERSION" = "master" ]
then
  branch_name=master
else
  branch_name=release/$FFMPEG_VERSION
fi

if [ -d "${repo_dir}" ]
then
  # repo dir already exists
  cd "${repo_dir}"
  git fetch

  if [ "$(git rev-parse @)" != "$(git rev-parse origin/"${branch_name}")" ]
  then
    # update
    git pull

    # cleanup
    make clean || true
    make distclean || true

    # (re)configure
    configure
  fi
else
  # clone & set branch
  git clone https://git.ffmpeg.org/ffmpeg.git "${repo_dir}"
  cd "${repo_dir}"
  git checkout "${branch_name}"

  # configure
  configure
fi

# build
make -j "${PROC_COUNT}"
make install
